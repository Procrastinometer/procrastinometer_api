// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  apiKey    String    @unique @map("api_key")
  sessions  Session[]
  timeLogs  TimeLog[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  refreshToken String   @unique @map("refresh_token")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  expiresAt    DateTime

  @@map("sessions")
  @@index([userId])
  @@index([expiresAt])
}

model TimeLog {
  id                  String   @id @default(uuid())
  userId              String   @map("user_id")
  startTime           DateTime @map("start_time")
  endTime             DateTime @map("end_time")
  duration            Int
  fileName            String   @map("file_name")
  codeEditor          String   @map("code_editor")
  osName              String   @map("os_name")
  projectName         String   @map("project_name")
  programmingLanguage String   @map("programming_language")
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime @default(now())

  @@map("time_logs")
  @@index([userId])
  @@index([startTime])
}
